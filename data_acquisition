source("setup.R")
### 1.1 CTRP Data Acquisition and Processing ###

### 0.2 links ###
# Define data source URLs with comments
data_urls <- list(
  ccle_metabolites = "https://data.broadinstitute.org/ccle/CCLE_metabolomics_20190502.csv",  # Clear metabolomics data by the CCLE.
  ccle_names = "https://data.broadinstitute.org/ccle/Cell_lines_annotations_20181226.txt",  # Cancer cell lines names for dataframes. Important for merging.
  ctrp = "ftp://caftpd.nci.nih.gov/pub/OCG-DCC/CTD2/Broad/CTRPv2.0_2015_ctd2_ExpandedDataset/CTRPv2.0_2015_ctd2_ExpandedDataset.zip",  # CTRP dataset for dose-response data.
  gdsc_to_ccle_names = "https://www.cancerrxgene.org/gdsc1000/GDSC1000_WebResources//Data/suppData/TableS4E.xlsx",  # Names for overlapping with CCLE-dataframe.
  gdsc_to_ctrp_names = "https://www.cancerrxgene.org/gdsc1000/GDSC1000_WebResources//Data/suppData/TableS4I.xlsx"  # Names for overlapping with CTRP-dataframe.
)

# Assign URLs to individual variables
list2env(data_urls, envir = .GlobalEnv)


# Function to download and unzip CTRP data
download_and_unzip_ctrp <- function(url, temp_dir) {
  temp_file <- tempfile()
  download.file(url, temp_file, mode = "wb")
  unzip(temp_file, exdir = temp_dir)
  unlink(temp_file)
  return(temp_dir)
}

# Function to read CTRP files
read_ctrp_file <- function(file_path) {
  read_delim(file_path, "\t", escape_double = FALSE, trim_ws = TRUE, col_names = TRUE)
}

# Function to process CTRP data
process_ctrp_data <- function(temp_dir) {
  # List and read files
  ctrp_files <- list.files(path = temp_dir, pattern = "*.txt", full.names = TRUE, recursive = FALSE)
  ctrp_list <- lapply(ctrp_files, read_ctrp_file) %>% purrr::compact()
  
  # Name list elements
  names(ctrp_list) <- ctrp_files
  
  # Create permanent directory for processed files
  dir.create(path = "Data/tempdir_ctrp", showWarnings = FALSE)
  
  # Save each element as a separate .RData file
  for (name in names(ctrp_list)) {
    save(list = name, file = paste0("Data/", basename(name), ".RData"))
  }
  
  return(ctrp_list)
}

# Main execution
temp_dir <- tempdir()
ctrp_dir <- download_and_unzip_ctrp(ctrp_link, temp_dir)
ctrp_data <- process_ctrp_data(ctrp_dir)

# Assign processed data to global environment
list2env(ctrp_data, globalenv())

# Clean up
rm(ctrp_data, temp_dir, ctrp_dir)


# Read CCLE names data
ccle_names <- fread(ccle_names_link) %>%
  select(CCLE_ID, Name, tcga_code)

# Process CCLE metabolomics data
ccle_metabolomics <- fread(ccle_metabolites_link) %>%
  stringdist_join(
    ccle_names,
    by = "CCLE_ID",
    max_dist = 1,
    method = "lcs",
    mode = "left",
    ignore_case = TRUE
  ) %>%
  select(-CCLE_ID.y) %>%
  rename(CCLE_ID = CCLE_ID.x) %>%
  select(CCLE_ID, Name, DepMap_ID, tcga_code, everything()) %>%
  rename(ccl_name = Name) %>%
  drop_na(ccl_name)

# Save processed data
save(ccle_metabolomics, file = "Data/ccle_metabolomics.RData")

# Clean up
rm(ccle_names, ccle_metabolites_link, ccle_names_link)

### 1.3 CTRP for Correlation (Long Format) ###
ctrp_for_cor_long <- `tempdir_ctrp/v20.data.curves_post_qc.txt` %>%
  full_join(`tempdir_ctrp/v20.meta.per_experiment.txt`) %>%
  full_join(`tempdir_ctrp/v20.meta.per_compound.txt`) %>%
  full_join(`tempdir_ctrp/v20.meta.per_cell_line.txt`) %>%
  select(
    apparent_ec50_umol,
    area_under_curve,
    top_test_conc_umol,
    cpd_name,
    master_cpd_id,
    broad_cpd_id,
    ccl_name,
    master_ccl_id,
    growth_mode,
    ccle_primary_site,
    ccle_primary_hist,
    ccle_hist_subtype_1,
    gene_symbol_of_protein_target
  ) %>%
  drop_na(ccl_name) %>%
  stringdist_join(
    ccle_metabolomics,
    by = "ccl_name",
    max_dist = 1,
    method = "lcs",
    mode = "right",
    ignore_case = TRUE
  ) %>%
  rename(ccl_name = as.factor("ccl_name.y")) %>%
  select(-c(ccl_name.x, CCLE_ID, DepMap_ID)) %>%
  pivot_longer(
    cols = !c(
      apparent_ec50_umol,
      area_under_curve,
      top_test_conc_umol,
      cpd_name,
      master_cpd_id,
      broad_cpd_id,
      ccl_name,
      master_ccl_id,
      growth_mode,
      ccle_primary_site,
      ccle_primary_hist,
      ccle_hist_subtype_1,
      gene_symbol_of_protein_target,
      tcga_code
    ),
    names_to = "metabolite_name",
    names_repair = "check_unique",
    values_to = "metabolite_conc",
    values_drop_na = FALSE
  ) %>%
  group_by(tcga_code, master_cpd_id, metabolite_name) %>%
  mutate(group_id = cur_group_id()) %>%
  ungroup()

# Save processed data
save(ctrp_for_cor_long, file = "Data/ctrp_for_cor_long.RData")

# Clean up
rm(
  `tempdir_ctrp/v20.data.curves_post_qc.txt`,
  `tempdir_ctrp/v20.meta.per_experiment.txt`,
  `tempdir_ctrp/v20.meta.per_compound.txt`,
  `tempdir_ctrp/v20._COLUMNS.txt`,
  `tempdir_ctrp/v20._README.txt`,
  `tempdir_ctrp/v20.data.per_cpd_avg.txt`,
  `tempdir_ctrp/v20.data.per_cpd_post_qc.txt`,
  `tempdir_ctrp/v20.data.per_cpd_pre_qc.txt`,
  `tempdir_ctrp/v20.data.per_cpd_well.txt`,
  `tempdir_ctrp/v20.meta.media_comp.txt`,
  `tempdir_ctrp/v20.meta.per_assay_plate.txt`,
  ccle_metabolomics,
  ctrp_link,
  i
)